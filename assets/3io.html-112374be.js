const i=JSON.parse('{"key":"v-8ae9d9c8","path":"/discovery/computer/3io.html","title":"I/O","lang":"zh-CN","frontmatter":{"title":"I/O","icon":"io","category":["计算机基础"],"tag":["IO"]},"headers":[{"level":2,"title":"何为IO？","slug":"何为io","link":"#何为io","children":[]},{"level":2,"title":"有哪些常见的 IO 模型？","slug":"有哪些常见的-io-模型","link":"#有哪些常见的-io-模型","children":[{"level":3,"title":"同步阻塞 IO，BIO（Blocking I/O）","slug":"同步阻塞-io-bio-blocking-i-o","link":"#同步阻塞-io-bio-blocking-i-o","children":[]},{"level":3,"title":"同步非阻塞 IO，NIO（Non-blocking）","slug":"同步非阻塞-io-nio-non-blocking","link":"#同步非阻塞-io-nio-non-blocking","children":[]},{"level":3,"title":"IO 多路复用，IO Multiplexing","slug":"io-多路复用-io-multiplexing","link":"#io-多路复用-io-multiplexing","children":[]},{"level":3,"title":"信号驱动 IO，Signal-Driven I/O","slug":"信号驱动-io-signal-driven-i-o","link":"#信号驱动-io-signal-driven-i-o","children":[]},{"level":3,"title":"异步 IO，AIO (Asynchronous I/O)","slug":"异步-io-aio-asynchronous-i-o","link":"#异步-io-aio-asynchronous-i-o","children":[]}]}],"git":{"createdTime":1693508810000,"updatedTime":1693662831000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":3}]},"readingTime":{"minutes":4.27,"words":1280},"filePathRelative":"discovery/computer/3io.md","localizedDate":"2023年8月31日","excerpt":"<h2> 何为IO？</h2>\\n<p>I/O（<strong>I</strong>nput/<strong>O</strong>utpu） 即<strong>输入／输出</strong> 。</p>\\n<p>从应用程序的视角来看的话，应用程序对操作系统的内核发起 IO 调用（系统调用），操作系统负责的内核执行具体的 IO 操作。应用程序实际上只是发起了 IO 操作的调用而已，具体 IO 的执行是由操作系统的内核来完成的。</p>\\n<p>当应用程序发起 I/O 调用后，会经历两个步骤：</p>\\n<ol>\\n<li>内核等待 I/O 设备准备好数据</li>\\n<li>内核将数据从内核空间拷贝到用户空间。</li>\\n</ol>\\n"}');export{i as data};
