const n=JSON.parse('{"key":"v-42365a57","path":"/framework/1spring/0spring.html","title":"Spring面试题一","lang":"zh-CN","frontmatter":{"title":"Spring面试题一","icon":"page","category":["框架"],"tag":["Spring","SpringWeb","SpringBoot","八股"]},"headers":[{"level":2,"title":"什么是单例池？作用是什么？","slug":"什么是单例池-作用是什么","link":"#什么是单例池-作用是什么","children":[]},{"level":2,"title":"Bean对象和普通对象之间的区别是什么","slug":"bean对象和普通对象之间的区别是什么","link":"#bean对象和普通对象之间的区别是什么","children":[]},{"level":2,"title":"@PostConstruct是如何工作的","slug":"postconstruct是如何工作的","link":"#postconstruct是如何工作的","children":[]},{"level":2,"title":"Bean的初始化是如何工作的？","slug":"bean的初始化是如何工作的","link":"#bean的初始化是如何工作的","children":[]},{"level":2,"title":"Bean初始化和实例化的区别是什么？","slug":"bean初始化和实例化的区别是什么","link":"#bean初始化和实例化的区别是什么","children":[]},{"level":2,"title":"初始化后是什么？","slug":"初始化后是什么","link":"#初始化后是什么","children":[]},{"level":2,"title":"构造方法推断","slug":"构造方法推断","link":"#构造方法推断","children":[]},{"level":2,"title":"先ByType再ByName","slug":"先bytype再byname","link":"#先bytype再byname","children":[]},{"level":2,"title":"SpringAOP怎么工作的？","slug":"springaop怎么工作的","link":"#springaop怎么工作的","children":[]},{"level":2,"title":"Spring事务底层如何工作？","slug":"spring事务底层如何工作","link":"#spring事务底层如何工作","children":[]},{"level":2,"title":"Spring事务失效的原因","slug":"spring事务失效的原因","link":"#spring事务失效的原因","children":[]},{"level":2,"title":"@Configuration的作用","slug":"configuration的作用","link":"#configuration的作用","children":[]}],"git":{"createdTime":1687158105000,"updatedTime":1687168749000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":3}]},"readingTime":{"minutes":4.25,"words":1274},"filePathRelative":"framework/1spring/0spring.md","localizedDate":"2023年6月19日","excerpt":"<h2> 什么是单例池？作用是什么？</h2>\\n<p><strong>单例Bean</strong>通过多次<code>getBean</code>方法都会获得同一个实例。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@ComponentScan</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"com.zyl\\"</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">AppConfig</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token annotation punctuation\\">@Component</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">UserService</span> <span class=\\"token punctuation\\">{</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Test</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">AnnotationConfigApplicationContext</span> applicationContext <span class=\\"token operator\\">=</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">AnnotationConfigApplicationContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">AppConfig</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Object</span> userService1 <span class=\\"token operator\\">=</span> applicationContext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBean</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"userService\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">Object</span> userService2 <span class=\\"token operator\\">=</span> applicationContext<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBean</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"userService\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>userService1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>userService2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{n as data};
