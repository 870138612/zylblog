const l=JSON.parse('{"key":"v-f9cd8696","path":"/java/1java/2java.html","title":"Java基础二","lang":"zh-CN","frontmatter":{"title":"Java基础二","icon":"page","star":true,"category":["Java"],"tag":["Java基础","八股"]},"headers":[{"level":2,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[{"level":3,"title":"面向对象和面向过程的区别","slug":"面向对象和面向过程的区别","link":"#面向对象和面向过程的区别","children":[]},{"level":3,"title":"对象的相等和引用的相等","slug":"对象的相等和引用的相等","link":"#对象的相等和引用的相等","children":[]},{"level":3,"title":"如果没有声明构造方法，程序能正确执行吗？","slug":"如果没有声明构造方法-程序能正确执行吗","link":"#如果没有声明构造方法-程序能正确执行吗","children":[]},{"level":3,"title":"面向对象的三个特征","slug":"面向对象的三个特征","link":"#面向对象的三个特征","children":[]},{"level":3,"title":"接口和抽象类的共同点","slug":"接口和抽象类的共同点","link":"#接口和抽象类的共同点","children":[]},{"level":3,"title":"浅拷贝，深拷贝，引用拷贝","slug":"浅拷贝-深拷贝-引用拷贝","link":"#浅拷贝-深拷贝-引用拷贝","children":[]}]},{"level":2,"title":"Object","slug":"object","link":"#object","children":[{"level":3,"title":"==和equals区别","slug":"和equals区别","link":"#和equals区别","children":[]},{"level":3,"title":"hashCode()作用","slug":"hashcode-作用","link":"#hashcode-作用","children":[]},{"level":3,"title":"为什么重写 equals() 时必须重写 hashCode() 方法？","slug":"为什么重写-equals-时必须重写-hashcode-方法","link":"#为什么重写-equals-时必须重写-hashcode-方法","children":[]}]},{"level":2,"title":"String","slug":"string","link":"#string","children":[{"level":3,"title":"String、StringBuffer、StringBuilder 的区别？","slug":"string、stringbuffer、stringbuilder-的区别","link":"#string、stringbuffer、stringbuilder-的区别","children":[]},{"level":3,"title":"String为何不可变？","slug":"string为何不可变","link":"#string为何不可变","children":[]},{"level":3,"title":"字符串拼接用“+” 还是 StringBuilder?","slug":"字符串拼接用-还是-stringbuilder","link":"#字符串拼接用-还是-stringbuilder","children":[]},{"level":3,"title":"String s1 = new String(\\"abc\\");这句话创建了几个字符串对象？","slug":"string-s1-new-string-abc-这句话创建了几个字符串对象","link":"#string-s1-new-string-abc-这句话创建了几个字符串对象","children":[]},{"level":3,"title":"String#intern 方法有什么作用?","slug":"string-intern-方法有什么作用","link":"#string-intern-方法有什么作用","children":[]},{"level":3,"title":"编译器对字符串拼接的优化","slug":"编译器对字符串拼接的优化","link":"#编译器对字符串拼接的优化","children":[]}]},{"level":2,"title":"Java值传递","slug":"java值传递","link":"#java值传递","children":[{"level":3,"title":"形参和实参","slug":"形参和实参","link":"#形参和实参","children":[]},{"level":3,"title":"值传递&引用传递","slug":"值传递-引用传递","link":"#值传递-引用传递","children":[]},{"level":3,"title":"Java只有值传递","slug":"java只有值传递","link":"#java只有值传递","children":[]}]},{"level":2,"title":"Java序列化","slug":"java序列化","link":"#java序列化","children":[{"level":3,"title":"serialVersionUID 有什么作用？","slug":"serialversionuid-有什么作用","link":"#serialversionuid-有什么作用","children":[]}]}],"git":{"createdTime":1684077684000,"updatedTime":1687273140000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":18},{"name":"ZYL1210","email":"60984434+870138612@users.noreply.github.com","commits":3},{"name":"zyl1210","email":"60984434+870138612@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":9.36,"words":2809},"filePathRelative":"java/1java/2java.md","localizedDate":"2023年5月14日","excerpt":"<h2> 面向对象</h2>\\n<h3> 面向对象和面向过程的区别</h3>\\n<ul>\\n<li>面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。</li>\\n<li>面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。</li>\\n</ul>\\n<p>一个注重过程，一个注重内部属性。</p>\\n"}');export{l as data};
