const n=JSON.parse('{"key":"v-f9cd8696","path":"/java/1java/2java.html","title":"Java基础面试题二","lang":"en-US","frontmatter":{"title":"Java基础面试题二","icon":"page","category":["Java"],"tag":["Java基础","八股"],"description":"面向对象 面向对象和面向过程的区别 面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。 面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。 一个注重过程，一个注重对象的内部属性。 对象的相等和引用的相等 对象的相等是是比较内存中存放的对象是否相等。 引用相等是指向的内存地址是否相等。 String str1 = \\"a\\"; String str2 = new String(\\"a\\"); String str3 = \\"a\\"; System.out.println(str1 == str2);//false\\t System.out.println(str1 == str3);//true System.out.println(str1.equals(str2));//true\\t System.out.println(str1.equals(str3));//true","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/1java/2java.html"}],["meta",{"property":"og:title","content":"Java基础面试题二"}],["meta",{"property":"og:description","content":"面向对象 面向对象和面向过程的区别 面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。 面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。 一个注重过程，一个注重对象的内部属性。 对象的相等和引用的相等 对象的相等是是比较内存中存放的对象是否相等。 引用相等是指向的内存地址是否相等。 String str1 = \\"a\\"; String str2 = new String(\\"a\\"); String str3 = \\"a\\"; System.out.println(str1 == str2);//false\\t System.out.println(str1 == str3);//true System.out.println(str1.equals(str2));//true\\t System.out.println(str1.equals(str3));//true"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-14T16:24:47.000Z"}],["meta",{"property":"article:author","content":"ZYL1210"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:tag","content":"八股"}],["meta",{"property":"article:modified_time","content":"2023-05-14T16:24:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java基础面试题二\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-14T16:24:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZYL1210\\",\\"url\\":\\"https://localhost\\"}]}"]]},"headers":[{"level":2,"title":"面向对象","slug":"面向对象","link":"#面向对象","children":[{"level":3,"title":"面向对象和面向过程的区别","slug":"面向对象和面向过程的区别","link":"#面向对象和面向过程的区别","children":[]},{"level":3,"title":"对象的相等和引用的相等","slug":"对象的相等和引用的相等","link":"#对象的相等和引用的相等","children":[]},{"level":3,"title":"如果没有声明构造方法，程序能正确执行吗？","slug":"如果没有声明构造方法-程序能正确执行吗","link":"#如果没有声明构造方法-程序能正确执行吗","children":[]},{"level":3,"title":"面向对象的三个特征","slug":"面向对象的三个特征","link":"#面向对象的三个特征","children":[]},{"level":3,"title":"接口和抽象类的共同点","slug":"接口和抽象类的共同点","link":"#接口和抽象类的共同点","children":[]},{"level":3,"title":"浅拷贝，深拷贝，引用拷贝","slug":"浅拷贝-深拷贝-引用拷贝","link":"#浅拷贝-深拷贝-引用拷贝","children":[]}]},{"level":2,"title":"String","slug":"string","link":"#string","children":[]}],"git":{"createdTime":1684077684000,"updatedTime":1684081487000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":4},{"name":"ZYL1210","email":"60984434+870138612@users.noreply.github.com","commits":1},{"name":"zyl1210","email":"60984434+870138612@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":3.61,"words":1084},"filePathRelative":"java/1java/2java.md","localizedDate":"May 14, 2023","excerpt":"<h2> 面向对象</h2>\\n<h3> 面向对象和面向过程的区别</h3>\\n<ul>\\n<li>面向过程把解决问题的过程拆成一个个方法，通过一个个方法的执行解决问题。</li>\\n<li>面向对象会先抽象出对象，然后用对象执行方法的方式解决问题。</li>\\n</ul>\\n<p>一个注重过程，一个注重对象的内部属性。</p>\\n<h3> 对象的相等和引用的相等</h3>\\n<p>对象的相等是是比较内存中存放的对象是否相等。</p>\\n<p>引用相等是指向的内存地址是否相等。</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">String</span> str1 <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">String</span> str2 <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">String</span> str3 <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>str1 <span class=\\"token operator\\">==</span> str2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//false\\t</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>str1 <span class=\\"token operator\\">==</span> str3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>str1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>str2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true\\t</span>\\n<span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span>str1<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">equals</span><span class=\\"token punctuation\\">(</span>str3<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//true</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
