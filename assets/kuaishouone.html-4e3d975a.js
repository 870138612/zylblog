const n=JSON.parse('{"key":"v-fcad2272","path":"/interview/kuaishouone.html","title":"快手","lang":"zh-CN","frontmatter":{"title":"快手","icon":"duihua","category":["面经"],"tag":["快手","面经"]},"headers":[],"git":{"createdTime":1691122962000,"updatedTime":1691122962000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":1}]},"readingTime":{"minutes":3.04,"words":911},"filePathRelative":"interview/kuaishouone.md","localizedDate":"2023年8月4日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">不一定完全正确</p>\\n<p>⁉️ 个人回答不保证正确</p>\\n<h2> 一面</h2>\\n<h4> 自我介绍</h4>\\n<h4> 对电商项目的优化</h4>\\n<ul>\\n<li>更改了 JVM 中的老年代和新生代的内存分布，将秒杀的并发量提高。</li>\\n<li>使用 <code>CompletableFuture</code> 对 SKU 数据进行异步查询，提高了查询速度。</li>\\n<li>登录部分由原来的手动查询用户数据密码比对，改为了使用 <code>SpringSecurity</code> 进行登录认证，简化了开发步骤，另外使用 Redis 解决分布式下的用户数据共享。</li>\\n<li>使用 Sentinel 限制后端并发数，熔断降级保证服务安全可用。</li>\\n</ul>\\n<h3> 虚拟内存的概念</h3>\\n<ul>\\n<li>虚拟内存是解决内存紧张的问题，对应于操作系统调度中的中级调度，在程序运行时并不要把所有的数据都放入内存，并且在内存紧张时将部分暂时不会执行的进程放入到磁盘中，等到内存够用时再将其调回内存。</li>\\n</ul>\\n<h3> 操作系统中文件的实现</h3>\\n<ul>\\n<li>单级目录结构和多级目录结构以及图形目录结构的优缺点。</li>\\n</ul>\\n<blockquote>\\n<p>现在想起来面试官问的应该是文件的逻辑结构和物理结构。</p>\\n<p>逻辑结构分为顺序，索引和顺序索引结构。</p>\\n<p>物理结构的实现分为</p>\\n<ul>\\n<li>\\n<p>连续分配，在目录中设置对应文件的开始块号和结束块号。</p>\\n</li>\\n<li>\\n<p>链接分配分为隐式链接和显式链接，隐式链接可靠性差，显示连接的指针占用空间，并且可靠性也不好。</p>\\n</li>\\n<li>\\n<p>索引分配，为每个文件分配一个索引分配表，表中记录了属于这个文件的磁盘块，不仅支持随机访问，而且不会产生外部碎片。</p>\\n</li>\\n<li>\\n<p>混合索引分配，既有直接地址分配，又有多级索引分配。</p>\\n</li>\\n</ul>\\n</blockquote>\\n<h3> 多级缓存的作用</h3>\\n<ul>\\n<li>（这玩意书上怎么没看到），我说我对硬件有所了解，CPU 中的缓存就是多级缓存，现在的 CPU 一般包含三级缓存，分别是 l1，l2，l3，速度逐渐降低，容量逐渐扩大，使用多级缓存能很好的解决 CPU 速度和主存速度不匹配的问题，就像主存用来解决 CPU 和 磁盘之间的速度差异一样。</li>\\n</ul>\\n<h3> 访问一个网址的过程</h3>\\n<ul>\\n<li>首先通过 DNS 解析为 IP 地址，再和 IP 地址进行 TCP 三次握手，将请求发送给服务器，服务器处理之后返回解析的数据，浏览器展示。</li>\\n</ul>\\n<h3> TCP 三次握手说说</h3>\\n<ul>\\n<li>首先客户端发送数据到客户端，当中有 <code>SYN=1,seq=x</code>，服务器收到数据之后返回确认 <code>SYN=1,ack=x+1,seq=y</code>，客户端收到确认之后返回确认<code>ack=y+1,seq=x+1</code>。</li>\\n</ul>\\n<h3> HTTP 和 HTTPS 的区别</h3>\\n<ul>\\n<li>\\n<p><strong>端口号</strong>：HTTP 默认是 <code>80</code>，HTTPS 默认是 <code>443</code>。</p>\\n</li>\\n<li>\\n<p><strong>URL 前缀</strong>：HTTP 的 URL 前缀是 <code>http://</code>，HTTPS 的 URL 前缀是 <code>https://</code>。</p>\\n</li>\\n<li>\\n<p><strong>安全性和资源消耗</strong>：HTTP 协议运行在 TCP 之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份。HTTPS 是运行在 SSL/TLS 之上的 HTTP 协议，SSL/TLS 运行在 TCP 之上。所有传输的内容都经过加密，加密采用对称加密，但对称加密的密钥用服务器方的证书进行了非对称加密。所以说，HTTP 安全性没有 HTTPS 高，但是 HTTPS 比 HTTP 耗费更多服务器资源。</p>\\n</li>\\n</ul>\\n<h3> 算法题：链表翻转</h3>\\n</div>"}');export{n as data};
