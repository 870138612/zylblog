const l=JSON.parse('{"key":"v-19dbaca0","path":"/note/binterview/tongcheng.html","title":"同程旅行-Java开发-一面","lang":"zh-CN","frontmatter":{"title":"同程旅行-Java开发-一面","icon":"duihua","date":"2023-09-27T00:00:00.000Z","star":true,"category":["面经"],"tag":["同程","面经"]},"headers":[{"level":2,"title":"一面","slug":"一面","link":"#一面","children":[{"level":3,"title":"介绍一下简历上的项目","slug":"介绍一下简历上的项目","link":"#介绍一下简历上的项目","children":[]},{"level":3,"title":"介绍一下 IOC 和 AOP","slug":"介绍一下-ioc-和-aop","link":"#介绍一下-ioc-和-aop","children":[]},{"level":3,"title":"SpringBoot 约定优于配置是什么意思？","slug":"springboot-约定优于配置是什么意思","link":"#springboot-约定优于配置是什么意思","children":[]},{"level":3,"title":"Spring 中的事务传播行为有哪些？","slug":"spring-中的事务传播行为有哪些","link":"#spring-中的事务传播行为有哪些","children":[]},{"level":3,"title":"Java 中有哪些类型的锁？","slug":"java-中有哪些类型的锁","link":"#java-中有哪些类型的锁","children":[]},{"level":3,"title":"死锁发生的原因？怎么防止？","slug":"死锁发生的原因-怎么防止","link":"#死锁发生的原因-怎么防止","children":[]},{"level":3,"title":"内存泄漏的理解","slug":"内存泄漏的理解","link":"#内存泄漏的理解","children":[]},{"level":3,"title":"SQL 语句中关键字的优先级顺序","slug":"sql-语句中关键字的优先级顺序","link":"#sql-语句中关键字的优先级顺序","children":[]},{"level":3,"title":"如何排查 SQL 是不是一个慢查询？","slug":"如何排查-sql-是不是一个慢查询","link":"#如何排查-sql-是不是一个慢查询","children":[]},{"level":3,"title":"索引失效问题？","slug":"索引失效问题","link":"#索引失效问题","children":[]},{"level":3,"title":"如何对 MySQL 的性能进行调优？","slug":"如何对-mysql-的性能进行调优","link":"#如何对-mysql-的性能进行调优","children":[]},{"level":3,"title":"Redis 能用在什么场景上？","slug":"redis-能用在什么场景上","link":"#redis-能用在什么场景上","children":[]},{"level":3,"title":"Redis 的持久化方式","slug":"redis-的持久化方式","link":"#redis-的持久化方式","children":[]},{"level":3,"title":"热 key 问题的解决方案","slug":"热-key-问题的解决方案","link":"#热-key-问题的解决方案","children":[]},{"level":3,"title":"BIO 和 NIO","slug":"bio-和-nio","link":"#bio-和-nio","children":[]},{"level":3,"title":"用户的越权如何解决？","slug":"用户的越权如何解决","link":"#用户的越权如何解决","children":[]},{"level":3,"title":"如果有个接口性能比较差如何做优化？","slug":"如果有个接口性能比较差如何做优化","link":"#如果有个接口性能比较差如何做优化","children":[]},{"level":3,"title":"反问","slug":"反问","link":"#反问","children":[]}]},{"level":2,"title":"二面","slug":"二面","link":"#二面","children":[{"level":3,"title":"登录部分怎么做的？","slug":"登录部分怎么做的","link":"#登录部分怎么做的","children":[]},{"level":3,"title":"Redis 提高并发指的是？","slug":"redis-提高并发指的是","link":"#redis-提高并发指的是","children":[]},{"level":3,"title":"每个用户查询自己的订单数据如何做数据隔离的？","slug":"每个用户查询自己的订单数据如何做数据隔离的","link":"#每个用户查询自己的订单数据如何做数据隔离的","children":[]},{"level":3,"title":"RabbitMQ 削峰填谷说一下","slug":"rabbitmq-削峰填谷说一下","link":"#rabbitmq-削峰填谷说一下","children":[]},{"level":3,"title":"如果后端并发量承受不了如何做优化？","slug":"如果后端并发量承受不了如何做优化","link":"#如果后端并发量承受不了如何做优化","children":[]}]}],"git":{"createdTime":1695806656000,"updatedTime":1696822235000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":3}]},"readingTime":{"minutes":7.28,"words":2185},"filePathRelative":"note/binterview/tongcheng.md","localizedDate":"2023年9月27日","excerpt":"<p>⁉️ 个人回答不保证正确</p>\\n<h2> 一面</h2>\\n<p>面试官迟到了一分钟还说抱歉，我真的哭死。</p>\\n<h3> 介绍一下简历上的项目</h3>\\n<ul>\\n<li>第一个项目为一个电商的项目，通过 Nginx 动静分离，分为多个微服务。。。。。。</li>\\n</ul>\\n<h3> 介绍一下 IOC 和 AOP</h3>\\n<ul>\\n<li>IOC 又叫做控制翻转，在没有使用 Spring 之前，写后端的接口需要通过编写 Servlet 类来完成，有了控制反转之后，就能将这些对象的创建过程交给 Spring 来做，这样程序员就能注重于代码开发而不是对象创建。</li>\\n<li>AOP 是 SpringBoot 中的很重要的特性，面向切面编程，设计模式中讲到开闭原则，应该不修改原有的代码下扩展业务逻辑，Spring 可以在不修改原有代码的情况下实现对方法的前后的增强。主要使用到生成动态代理来进行增强，以 Spring 事务举例，通过生成一个 CGLIB 对象来获取数据库连接，将提交模式改为手动，之后执行数据库操作，发生异常则进行回滚，否则提交。</li>\\n<li>了解的就这些了，可能还有一部分没有讲到。</li>\\n<li><strong>没关系已经答得很好了</strong>。</li>\\n</ul>"}');export{l as data};
