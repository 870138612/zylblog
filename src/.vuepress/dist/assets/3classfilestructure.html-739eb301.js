const e=JSON.parse('{"key":"v-f43459d6","path":"/java/4jvm/3classfilestructure.html","title":"类文件结构","lang":"zh-CN","frontmatter":{"title":"类文件结构","icon":"page","category":["Java"],"tag":["类文件结构","八股"],"description":"字节码 在 Java 中，JVM 可以理解的代码就叫做字节码（即扩展名为 .class 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/java/4jvm/3classfilestructure.html"}],["meta",{"property":"og:site_name","content":"LIANG"}],["meta",{"property":"og:title","content":"类文件结构"}],["meta",{"property":"og:description","content":"字节码 在 Java 中，JVM 可以理解的代码就叫做字节码（即扩展名为 .class 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"ZYL1210"}],["meta",{"property":"article:tag","content":"类文件结构"}],["meta",{"property":"article:tag","content":"八股"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"类文件结构\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ZYL1210\\",\\"url\\":\\"https://localhost\\"}]}"]]},"headers":[{"level":2,"title":"字节码","slug":"字节码","link":"#字节码","children":[]},{"level":2,"title":"Class文件结构总结","slug":"class文件结构总结","link":"#class文件结构总结","children":[{"level":3,"title":"魔数（Magic Number）","slug":"魔数-magic-number","link":"#魔数-magic-number","children":[]},{"level":3,"title":"Class 文件版本号（Minor&Major Version）","slug":"class-文件版本号-minor-major-version","link":"#class-文件版本号-minor-major-version","children":[]},{"level":3,"title":"常量池（Constant Pool）","slug":"常量池-constant-pool","link":"#常量池-constant-pool","children":[]},{"level":3,"title":"访问标志(Access Flags)","slug":"访问标志-access-flags","link":"#访问标志-access-flags","children":[]},{"level":3,"title":"当前类（This Class）、父类（Super Class）、接口（Interfaces）索引集合","slug":"当前类-this-class-、父类-super-class-、接口-interfaces-索引集合","link":"#当前类-this-class-、父类-super-class-、接口-interfaces-索引集合","children":[]},{"level":3,"title":"字段表集合（Fields）","slug":"字段表集合-fields","link":"#字段表集合-fields","children":[]},{"level":3,"title":"方法表集合（Methods）","slug":"方法表集合-methods","link":"#方法表集合-methods","children":[]},{"level":3,"title":"属性表集合（Attributes）","slug":"属性表集合-attributes","link":"#属性表集合-attributes","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.56,"words":1367},"filePathRelative":"java/4jvm/3classfilestructure.md","excerpt":"<h2> 字节码</h2>\\n<p>在 Java 中，JVM 可以理解的代码就叫做<code>字节码</code>（即扩展名为 <code>.class</code> 的文件），它不面向任何特定的处理器，只面向虚拟机。Java 语言通过字节码的方式，在一定程度上解决了传统解释型语言执行效率低的问题，同时又保留了解释型语言可移植的特点。所以 Java 程序运行时比较高效，而且，由于字节码并不针对一种特定的机器，因此，Java 程序无须重新编译便可在多种不同操作系统的计算机上运行。</p>\\n","autoDesc":true}');export{e as data};
