const e=JSON.parse('{"key":"v-63b48971","path":"/java/1java/4javaProxy.html","title":"代理模式","lang":"zh-CN","frontmatter":{"title":"代理模式","icon":"page","category":["Java"],"tag":["代理模式","八股"]},"headers":[{"level":2,"title":"静态代理","slug":"静态代理","link":"#静态代理","children":[]},{"level":2,"title":"动态代理","slug":"动态代理","link":"#动态代理","children":[{"level":3,"title":"JDK动态代理","slug":"jdk动态代理","link":"#jdk动态代理","children":[]},{"level":3,"title":"CGLIB动态代理","slug":"cglib动态代理","link":"#cglib动态代理","children":[]}]},{"level":2,"title":"JDK动态代理和CGLIB动态代理的区别","slug":"jdk动态代理和cglib动态代理的区别","link":"#jdk动态代理和cglib动态代理的区别","children":[]},{"level":2,"title":"静态代理和动态代理的区别","slug":"静态代理和动态代理的区别","link":"#静态代理和动态代理的区别","children":[]}],"git":{"createdTime":1684147588000,"updatedTime":1684335826000,"contributors":[{"name":"ZYL1210","email":"870138612@qq.com","commits":4}]},"readingTime":{"minutes":4.39,"words":1316},"filePathRelative":"java/1java/4javaProxy.md","localizedDate":"2023年5月15日","excerpt":"<p>使用代理对象来代替真实对象的访问，这样能在不改变目标对象的前提下，提供额外的功能，扩展目标对象。</p>\\n<p>代理模式有静态代理和动态代理两种实现方式。</p>\\n"}');export{e as data};
